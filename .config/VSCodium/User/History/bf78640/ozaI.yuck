;; Variables
(defpoll clock_time :interval "5m" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "10h" "date '+%d/%m'")
(defpoll volume_percent :interval "3s" "pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}' | sed 's/%//' | head -1")
(defpoll mic_percent :interval "3s" "pactl get-source-volume @DEFAULT_SOURCE@ | awk '{print $5}' | sed 's/%//'")
(defpoll brightness_percent :interval "5s" "brightnessctl -m -d intel_backlight | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
;(defpoll battery_carga :interval "15s" "scripts/./battery --bat")
;(defpoll battery_status :interval "1m" "scripts/./battery --bat-st")
(defpoll memory :interval "15s" "scripts/./memory")
(defpoll memory_used_mb :interval "2m" "scripts/./mem-ad used")
(defpoll memory_total_mb :interval "2m" "scripts/./mem-ad total")
(defpoll memory_free_mb :interval "2m" "scripts/./mem-ad free")
(defpoll temperatura :interval "3h" "curl 'https://wttr.in/Florianopolis?m&format='%t''")
(defpoll janela_ativa :interval "500ms" "hyprctl activewindow | grep title | cut -d':' -f2 | cut -b1-50")
(defpoll volume_mic :interval "1s" "scripts/./audio --mic")
(defpoll volume :interval "500ms" "scripts/./audio --icon")

(defvar vol_reveal false)
(defvar br_reveal false)
;(defvar music_reveal false)
(defvar wifi_rev false)
(defvar time_rev false)
(defvar idle_inhibitor false)

(deflisten workspace "scripts/./workspace")

;(defvar eww "/usr/bin/eww -c $HOME/.config/eww")

(defpoll COL_WLAN :interval "1m" "scripts/./wifi --COL")
(defpoll ESSID_WLAN :interval "1m" "scripts/./wifi --ESSID")
(defpoll WLAN_ICON :interval "1m" "scripts/./wifi --ICON")

;(defpoll song :interval "2s"  "scripts/.music_info --song")
;(defpoll song_artist :interval "2s"  "scripts/./music_info --artist")
;(defpoll current_status :interval "1s"  "scripts/./music_info --time")
;(defpoll song_status :interval "2s"  "scripts/./music_info --status")
;(defpoll cover_art :interval "2s"  "scripts/./music_info --cover")

(defpoll calendar_day :interval "20h" "date '+%d'")
(defpoll calendar_year :interval "20h" "date '+%Y'")
(defpoll dia_semana :interval "20h" "date '+%A'")

(defpoll updates_total :interval "30m" "scripts/./updates --TOTAL")
(defpoll updates_aur :interval "30m" "scripts/./updates --AUR")

;; widgets

(defwidget wifi []
  (eventbox :onhover "${EWW_CMD} update wifi_rev=true"
            :onhoverlost "${EWW_CMD} update wifi_rev=false"
    (box :vexpand "false" :hexpand "false" :space-evenly "false"
      (button :class "module-wif"
        :timeout "300ms"
        :onclick "networkmanager_dmenu"
        :style "color: ${COL_WLAN};"
      WLAN_ICON)
      (revealer :transition "slideleft"
        :reveal wifi_rev
        :duration "350ms"
        (label :class "module_essid"
          :text ESSID_WLAN
        )
      )
    )
  )
)


(defwidget workspaces []
  (literal :content workspace))

(defwidget janela_titulo []
  (box 
    (label 
      :class "titulo_janela" 
      :text "❯ ${janela_ativa}"
      :halign "start"
    )
  )
)

(defwidget clima []
  (box :class "clima_module" :space-evenly "false"
    (label :class "temp_n" :text temperatura)
  )
)

(defwidget updates []
  (box :class "updates" :space-evenly "false" :orientation "h" :tooltip "AUR ${updates_aur}"
    (label :class "updates_icon" :text "💼 ")
    (label :class "updates_text" :text updates_total)
  )
)

(defwidget modulo_apresentacao []
  (box :class "apresentacao" :space-evenly "false" :orientation "h"
    (button
      :class {idle_inhibitor ? "system-btn-on" : "system-btn-off"}
      :onclick "scripts/./idle_inhibitor toggle"
      :tooltip "Modo Apresentação"
      {idle_inhibitor ? "" : ""}
    )
  )
)

(defwidget bat [battery status one two three four five six seven charge]
  (box
    :class "bat_module"
    :vexpand "false" :hexpand "false"
    (circular-progress
      :value {battery >= 78 ? 100 : battery}
      :class { battery == 'Charging' ? "batbar_carregada" :
      battery < 15 ? "batbar_critico" :
      battery < 30 ? "batbar_aviso" :
      battery < 40 ? "batbar_carregando" :
      battery < 78 ? "batbar_medio" : "batbar_carregada"}
      :thickness 4
      (button
        :class "batbar_icon"
        :tooltip "battery on ${battery}%"
        :onclick "scripts/./pop system"
        (label :class "iconbat_text"
          :text {status == 'Charging' ? charge :
          battery < 15 ? seven :
          battery < 30 ? six :
          battery < 45 ? four :
          battery < 60 ? five :
          battery < 75 ? three : one
          }
        )
      )
    )
  )
)

(defwidget mem []
  (box :class "mem_module" :vexpand "false" :hexpand "false"
    (circular-progress :value memory
      :class "membar"
      :thickness 4
      (button
        :class "iconmem"
        :tooltip "using ${memory}% ram"
        :onclick "scripts/./pop system"
        ""
      )
    )
  )
)

(defwidget sep []
  (box :class "module-2" :vexpand "false" :hexpand "false"
    (label :class "separ" :text "|")))

(defwidget dia_mes []
  (box :class "dia_mes" :orientation "v"  :valign "center"
    (label :class "data" :text clock_date)
    (label :class "dia" :text dia_semana)
  )
)

(defwidget clock_module []
  (eventbox :onhover "${EWW_CMD} update time_rev=true"
            :onhoverlost "${EWW_CMD} update time_rev=false"
    (box :class "module_time_date" :space-evenly "false" :orientation "h" :hexpand "false" :vexpand "false"
      (label :text clock_time :class "clock_time_class" )
      (label :text "∶" :class "clock_time_sep" )
      (label :text clock_minute :class "clock_minute_class")
      (revealer :transition "slideleft"
        :reveal time_rev
        :duration "350ms"
        (button :class "clock_date_class"
          :onclick "scripts/./pop calendar" (dia_mes)
        )
      )
    )
  )
)

(defwidget volume []
  (eventbox
    :onhover "${EWW_CMD} update vol_reveal=true"
    :onhoverlost "${EWW_CMD} update vol_reveal=false"
    (box :class "module-2" :space-evenly "false" :orientation "h" :spacing "3"
      (button :onclick "scripts/./pop audio" :class "mic_visible" volume_mic)
      (button :onclick "scripts/./pop audio" :class "volume_icon" :tooltip "${volume_percent}%" volume)
      (revealer :transition "slideright"
        :reveal vol_reveal
        :duration "350ms"
        (scale    :class "volbar"
          :value volume_percent
          :orientation "h"
          :tooltip "${volume_percent}%"
          :onchange "pactl set-sink-volume 0 {}%"
        )
      )
    )
  )
)

(defwidget bright []
  (eventbox :onhover "${EWW_CMD} update br_reveal=true" 
            :onhoverlost "${EWW_CMD} update br_reveal=false"
    (box :class "module-2" :space-evenly "false" :orientation "h" :spacing "3"
      (label :text "" :class "bright_icon" :tooltip "brightness")
      (revealer :transition "slideright"
        :reveal br_reveal
        :duration "350ms"
        (scale  :class "brightbar"
          :value brightness_percent
          :orientation "h"
          :tooltip "${brightness_percent}%"
          :max 100
          :min 0
          :onchange "brightnessctl set {}%"
        )
      )
    )
  )
)

(defwidget left []
  (box :orientation "h"
    :space-evenly "false"
    :halign "end"
    :class "left_modules"
    (updates)
    (sep)
    (modulo_apresentacao)
    (bright)
    (volume)
    (wifi)
    (sep)
    (bat :status {EWW_BATTERY.BAT1.status}
        :battery {EWW_BATTERY.BAT1.capacity}
        :charge "ﲹ" :one "" :two "" :three ""
        :four ""  :five "" :six "" :seven ""
    )
    (mem)
    (sep)
    (clock_module)
  )
)


(defwidget right []
  (box :orientation "h"
    :space-evenly "true"
    :halign "start"
    :class "right_modules"
    (janela_titulo)
  )
)

(defwidget center []
  (box :orientation "h"
    :space-evenly "false"
    :halign "center"
    :valign "center"
    :class "center_modules"
    (workspaces)
  )
)

(defwidget bar_1 []
  (box :class "bar_class"
    :orientation "h"
    (right)
    (center)
    (left)
  )
)

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0px"
    :y "0px"
    :width "100%"
    :anchor "top center"
  )
  :stacking "fg"
  :windowtype "dock"
  :exclusive "true"
  (bar_1)
)

(defwidget system []
  (box :class "sys_win" :orientation "v" :space-evenly "false" :hexpand "false" :vexpand "false" :spacing 0
    (button :class "bto_fechar_system" :onclick "scripts/./pop sytem" "×")
    (box :class "sys_bat_box" :orientation "h" :space-evenly "false"
      (circular-progress :value {EWW_BATTERY.BAT1.capacity}
        :class "sys_bat"
        :thickness 9
        (label
          :text "累"
          :class "sys_icon_bat"
          :limit-width 2
          :wrap "false")
      )
      (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
        (label :text "battery"
          :halign "start"
          :class "sys_text_bat"
          :limit-width 9
          :wrap "false"
        )
        (label :text "${EWW_BATTERY.BAT1.capacity}%"
          :halign "start"
          :class "sys_text_bat_sub"
          :limit-width 22
          :wrap "false"
        )
        (label :text "${EWW_BATTERY.BAT1.status}"
          :halign "start"
          :class "sys_text_bat_sub"
          :limit-width 22
          :wrap "false"
        )
      )
    )
    (label :text "━━━━━━━━━━━" :class "sys_sep" :halign "center")
    (box :class "sys_mem_box" :orientation "h" :space-evenly "false" :halign "start"
      (circular-progress :value memory
        :class "sys_mem"
        :thickness 9
        (label :text ""
          :class "sys_icon_mem"
          :limit-width 2
          :wrap "false"
          :angle 0.0
        )
      )
      (box :orientation "v" :space-evenly "false" :spacing 0 :hexpand "false" :vexpand "false"
        (label :text "memory"
          :halign "start"
          :class "sys_text_mem"
          :limit-width 9
          :wrap "false"
        )
        (label :text "${memory_used_mb} | ${memory_total_mb}mb "
          :halign "start"
          :class "sys_text_mem_sub"
          :limit-width 22
          :wrap "false"
        )
        (label :text "${memory_free_mb}mb free"
          :halign "start"
          :class "sys_text_mem_sub"
          :limit-width 22
          :wrap "false"
        )
      )
    )
  )
)

(defwidget cal []
  (box :class "cal" :orientation "v"
    (box :class "cal-in"
      (calendar :class "cal"
        :day calendar_day
        :year calendar_year
      )
    )
  )
)

(defwindow calendar
  :monitor 0
  :geometry (geometry :x "20px"
    :y "12px"
    :anchor "top right"
    :width "270px"
    :height "60px"
  )
  (cal)
)

(defwidget audio []
  (box :class "audio_box" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
    (button :class "bto_fechar_audio" :onclick "scripts/./pop audio" "×")
    (box :halign "center" :space-evenly "false" :hexpand "false" :vexpand "false"
      (box :class "speaker_icon" :orientation "v"
        (button :class "pavucontrol" :timeout "1m" :onclick "pavucontrol")
      )
      (box :orientation "v" :halign "center" :vexpand "false" :hexpand "false"
        (label :class "speaker_text" :text "falante" :valign "center" :halign "center" )
        (box :class "speaker_bar" :halign "center" :vexpand "false" :hexpand "false"
          (scale :value volume_percent
            :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
            :tooltip "volume ${volume_percent}%"
            :max 100
            :min 0
          )
        )
      )
    )
    (label :text "━━━━━━━━━━━━" :class "audio_sep" :halign "center")
    (box :halign "center" :space-evenly "false" :hexpand "false" :vexpand "false"
      (box :class "mic_icon" :orientation "v")
      (box :orientation "v" :halign "center" :vexpand "false" :hexpand "false"
        (label :class "mic_text" :text "mic" :valign "center" :halign "center" )
        (box :class "mic_bar" :halign "center" :vexpand "false" :hexpand "false"
          (scale :value mic_percent
            :tooltip "mic ${mic_percent}%"
            :onchange "pactl set-source-volume @DEFAULT_SOURCE@ {}%"
            :max 100
            :min 0
          )
        )
      )
    )
  )
)

(defwindow audio_ctl
  :monitor 0
  :geometry (geometry :x "190px"
    :y "12px"
    :anchor "top right"
    :width "190px"
    :height "60px")
  (audio)
)


(defwindow system
  :monitor 0
  :geometry (geometry :x "20px"
    :y "12px"
    :anchor "top right"
    :width "200px"
    :height "120px")
  (system)
)



;;  Music
;; (defwidget music_pop []
  ;;		(box :class "music_pop" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false"
    ;;			(box :class "music_cover_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover_art}');")
    ;;			(box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
      ;;				(label :halign "center" :class "music" :wrap "true" :limit-width 13 :text song)
      ;;				(label :halign "center" :class "music_artist" :wrap "true" :limit-width 15 :text song_artist)
      ;;				(box :orientation "h" :spacing 15 :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
        ;;					(button :class "music_btn_prev" :onclick "~/.config/eww/scripts/music_info --prev" "")
        ;;					(button :class "music_btn_play" :onclick "~/.config/eww/scripts/music_info --toggle" song_status)
        ;;					(button :class "music_btn_next" :onclick "~/.config/eww/scripts/music_info --next" ""))
      ;;				(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" :space-evenly "false"
        ;;					(scale :onscroll "mpc -q seek {}" :min 0 :active "true" :max 100 :value current_status)))))


;;  music
;;		(defwindow music_win :stacking "fg" :focusable "false" :screen 1
  ;;			    :geometry (geometry :x "0" :y "7%" :width 428 :height 104 :anchor "top center")
  ;;			     				(music_pop))

(defwidget menu_desliga []
  (box :class "menu_desliga" :orientation "v"
    (box :class "opcoes_letras" :orientation "h" :space-evenly "true" :vexpand "false" :hexpand "false"
      (label :class "d" :text "D")
      (label :class "r" :text "R")
      (label :class "l" :text "L")
      (label :class "c" :text "ESC")
    )
    (box :class "opcoes" :orientation "h" :space-evenly "true" :vexpand "false" :hexpand "false"
      (label :class "menu_desliga_opcoes" :text "[ desligar ]")
      (label :class "menu_desliga_opcoes" :text "[ reiniciar ]")
      (label :class "menu_desliga_opcoes" :text "[ logout ]")
      (label :class "menu_desliga_opcoes" :text "[ cancelar ]")
    )
  )
)

(defwindow desliga
  :monitor 0
  :geometry (geometry
    :x "100px"
    :y "15px"
    :anchor "center center"
    :width "290px"
   :height "40px")
  (menu_desliga)
)

(defwidget batCritica [bateria]    
  (box :class "aviso" :orientation "v" :space-evenly "false" 
    (button :class "bto_batCritica_fechar" :onclick "${EWW_CMD} close bat_critica" "×")
    (label :text "ATENÇÃO !!!")
    (box :class "batCritica_icone" :orientation "h" :space-evenly "false" 
         :halign "center" 
         :valign "baseline"
      (circular-progress :value bateria
        :class "sys_bat"
        :thickness 9
        (label
          :text ""
          :class "sys_icon_bat"
          :limit-width 2
          :wrap "false"
        )
      )
      (label :class "txt_nivel_critico" :text "nível crítico ${bateria}%")
    )
    (label :text "Conecte o Carregador !!!")
  )
)

(defwindow bat_critica 
  :monitor 0
  :geometry (geometry
    :x "0px"
    :y "0px"
    :anchor "center center"
    :width "400px"
    :height "200px"
  )
  (batCritica :bateria {EWW_BATTERY.BAT1.capacity})
)


